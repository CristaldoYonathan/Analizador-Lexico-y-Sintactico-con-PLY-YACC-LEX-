
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'IDENTIFICADOR NUMERO RESERVADO SIMBOLO_ESPECIAL STRING bloque : SIMBOLO_ESPECIAL declaraciones SIMBOLO_ESPECIAL\n     declaraciones : declaracion declaraciones \n                      | declaracion\n     declaracion : asignacion \n                    | funcion \n                    | inclusion \n                    | retorno \n     operacion : valor SIMBOLO_ESPECIAL valor \n     valor : IDENTIFICADOR\n                | NUMERO\n     asignacion : RESERVADO IDENTIFICADOR SIMBOLO_ESPECIAL valor SIMBOLO_ESPECIAL \n                    | RESERVADO IDENTIFICADOR SIMBOLO_ESPECIAL\n                    | IDENTIFICADOR SIMBOLO_ESPECIAL operacion SIMBOLO_ESPECIAL \n                    | IDENTIFICADOR SIMBOLO_ESPECIAL valor \n     funcion : RESERVADO RESERVADO SIMBOLO_ESPECIAL SIMBOLO_ESPECIAL bloque \n                | RESERVADO SIMBOLO_ESPECIAL argumentos SIMBOLO_ESPECIAL SIMBOLO_ESPECIAL \n                | RESERVADO SIMBOLO_ESPECIAL argumentos SIMBOLO_ESPECIAL bloque\n     argumentos : argumento SIMBOLO_ESPECIAL argumentos \n                    | argumento\n     argumento : asignacion\n                    | STRING\n                    | referencia\n                    | incremento\n                    | IDENTIFICADOR\n     referencia : SIMBOLO_ESPECIAL IDENTIFICADOR\n     incremento : IDENTIFICADOR SIMBOLO_ESPECIAL\n     retorno : RESERVADO valor SIMBOLO_ESPECIAL\n     inclusion : RESERVADO RESERVADO\n    '
    
_lr_action_items = {'SIMBOLO_ESPECIAL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,48,],[2,11,-3,-4,-5,-6,-7,15,18,-1,-2,19,20,22,30,-10,34,-12,38,39,-20,-21,-22,-23,40,-27,-9,41,42,2,44,20,-25,45,22,-26,-13,-15,-11,-16,-17,-18,-8,]),'$end':([1,11,],[0,-1,]),'RESERVADO':([2,4,5,6,7,8,9,11,13,15,17,20,30,31,33,39,41,43,44,45,46,],[9,9,-4,-5,-6,-7,13,-1,-28,21,-10,-12,-27,-9,-14,21,-13,-15,-11,9,-17,]),'IDENTIFICADOR':([2,4,5,6,7,8,9,11,13,15,17,18,20,21,22,30,31,33,39,40,41,42,43,44,45,46,],[10,10,-4,-5,-6,-7,14,-1,-28,29,-10,31,31,36,37,-27,-9,-14,29,31,-13,31,-15,-11,10,-17,]),'NUMERO':([9,18,20,40,42,],[17,17,17,17,17,]),'STRING':([15,39,],[26,26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'bloque':([0,34,38,],[1,43,46,]),'declaraciones':([2,4,45,],[3,12,3,]),'declaracion':([2,4,45,],[4,4,4,]),'asignacion':([2,4,15,39,45,],[5,5,25,25,5,]),'funcion':([2,4,45,],[6,6,6,]),'inclusion':([2,4,45,],[7,7,7,]),'retorno':([2,4,45,],[8,8,8,]),'valor':([9,18,20,40,42,],[16,33,35,33,48,]),'argumentos':([15,39,],[23,47,]),'argumento':([15,39,],[24,24,]),'referencia':([15,39,],[27,27,]),'incremento':([15,39,],[28,28,]),'operacion':([18,40,],[32,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> bloque","S'",1,None,None,None),
  ('bloque -> SIMBOLO_ESPECIAL declaraciones SIMBOLO_ESPECIAL','bloque',3,'p_expression_bloque','prueba.py',46),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_expression_declaraciones','prueba.py',51),
  ('declaraciones -> declaracion','declaraciones',1,'p_expression_declaraciones','prueba.py',52),
  ('declaracion -> asignacion','declaracion',1,'p_expression_declaracion','prueba.py',57),
  ('declaracion -> funcion','declaracion',1,'p_expression_declaracion','prueba.py',58),
  ('declaracion -> inclusion','declaracion',1,'p_expression_declaracion','prueba.py',59),
  ('declaracion -> retorno','declaracion',1,'p_expression_declaracion','prueba.py',60),
  ('operacion -> valor SIMBOLO_ESPECIAL valor','operacion',3,'p_expression_operacion','prueba.py',65),
  ('valor -> IDENTIFICADOR','valor',1,'p_expression_valor','prueba.py',70),
  ('valor -> NUMERO','valor',1,'p_expression_valor','prueba.py',71),
  ('asignacion -> RESERVADO IDENTIFICADOR SIMBOLO_ESPECIAL valor SIMBOLO_ESPECIAL','asignacion',5,'p_expression_asignacion','prueba.py',76),
  ('asignacion -> RESERVADO IDENTIFICADOR SIMBOLO_ESPECIAL','asignacion',3,'p_expression_asignacion','prueba.py',77),
  ('asignacion -> IDENTIFICADOR SIMBOLO_ESPECIAL operacion SIMBOLO_ESPECIAL','asignacion',4,'p_expression_asignacion','prueba.py',78),
  ('asignacion -> IDENTIFICADOR SIMBOLO_ESPECIAL valor','asignacion',3,'p_expression_asignacion','prueba.py',79),
  ('funcion -> RESERVADO RESERVADO SIMBOLO_ESPECIAL SIMBOLO_ESPECIAL bloque','funcion',5,'p_expression_funcion','prueba.py',84),
  ('funcion -> RESERVADO SIMBOLO_ESPECIAL argumentos SIMBOLO_ESPECIAL SIMBOLO_ESPECIAL','funcion',5,'p_expression_funcion','prueba.py',85),
  ('funcion -> RESERVADO SIMBOLO_ESPECIAL argumentos SIMBOLO_ESPECIAL bloque','funcion',5,'p_expression_funcion','prueba.py',86),
  ('argumentos -> argumento SIMBOLO_ESPECIAL argumentos','argumentos',3,'p_expression_argumentos','prueba.py',91),
  ('argumentos -> argumento','argumentos',1,'p_expression_argumentos','prueba.py',92),
  ('argumento -> asignacion','argumento',1,'p_expression_argumento','prueba.py',97),
  ('argumento -> STRING','argumento',1,'p_expression_argumento','prueba.py',98),
  ('argumento -> referencia','argumento',1,'p_expression_argumento','prueba.py',99),
  ('argumento -> incremento','argumento',1,'p_expression_argumento','prueba.py',100),
  ('argumento -> IDENTIFICADOR','argumento',1,'p_expression_argumento','prueba.py',101),
  ('referencia -> SIMBOLO_ESPECIAL IDENTIFICADOR','referencia',2,'p_expression_referencia','prueba.py',106),
  ('incremento -> IDENTIFICADOR SIMBOLO_ESPECIAL','incremento',2,'p_expression_incremento','prueba.py',111),
  ('retorno -> RESERVADO valor SIMBOLO_ESPECIAL','retorno',3,'p_expression_retorno','prueba.py',116),
  ('inclusion -> RESERVADO RESERVADO','inclusion',2,'p_expression_inclusion','prueba.py',121),
]
